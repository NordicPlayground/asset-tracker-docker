name: Publish Docker

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

on:
  push:
    branches:
      - saga
      - main
  workflow_dispatch:

jobs:
  build-and-push:
    strategy:
      # Don't overwhelm the toolchain server
      max-parallel: 1
      matrix:
        include:
          #Build for linux amd64
          - sdk_nrf_branch: v2.6-branch
            toolchain_version: v2.6.0
            # Optional, if you want to use a specific the commit
            # sdk_nrf_commit: 
            NORDIC_COMMAND_LINE_TOOLS_VERSION: "10-24-0/nrf-command-line-tools-10.24.0"
            arch: amd64
            native_board: native_sim
        #  #Build for linux arm64
        #   - sdk_nrf_branch: v2.6-branch
        #     toolchain_version: v2.6.0
        #     # Optional, if you want to use a specific the commit
        #     # sdk_nrf_commit: 
        #     NORDIC_COMMAND_LINE_TOOLS_VERSION: "10-24-0/nrf-command-line-tools-10.24.0"
        #     arch: arm64

    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug
          platforms: linux/amd64,linux/arm64 # Specify platforms here

      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Downcase image name
        run: echo "IMAGE_NAME_LOWERCASE=${IMAGE_NAME,,}" >> ${GITHUB_ENV}

      - name: Build and export to Docker
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          file: Dockerfile
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWERCASE }}:${{ matrix.sdk_nrf_branch }}
          build-args: |
            sdk_nrf_branch=${{ matrix.sdk_nrf_branch }}
            toolchain_version=${{ matrix.toolchain_version }}


      - name: Ensure nrfjprog works
        run: |
          docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWERCASE }}:${{ matrix.sdk_nrf_branch }} nrfjprog -v

      - name: Ensure clang-format works
        run: |
          docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWERCASE }}:${{ matrix.sdk_nrf_branch }} clang-format --version

      - name: Ensure native build works
        run: |
          docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWERCASE }}:${{ matrix.sdk_nrf_branch }} west build -b ${{ matrix.native_board }} zephyr/samples/hello_world

      - name: Ensure zephyr twister unit tests works
        run: |
          docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWERCASE }}:${{ matrix.sdk_nrf_branch }} ./zephyr/scripts/twister -p ${{ matrix.native_board }} -T zephyr/samples/subsys/testsuite/integration


      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWERCASE }}:${{ matrix.sdk_nrf_branch }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWERCASE }}:latest
          platforms: linux/amd64,linux/arm64 # Specify platforms here
          load: false # Should be false when pushing to a registry
          labels: ${{ steps.meta.outputs.labels }}
  
  